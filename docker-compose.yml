version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media:/app/media
    env_file: ".env"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  db:
    image: postgres:latest
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: artgallery
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty12345
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    command: redis-server --requirepass qwerty12345
    environment:
      REDIS_PASSWORD: qwerty12345
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Celery Worker
  celery-worker:
    build: .
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=artgallery
      - DB_USER=postgres
      - DB_PASSWORD=qwerty12345
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://:qwerty12345@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:qwerty12345@redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  # Celery Beat
  celery-beat:
    build: .
    command: celery -A config beat -l INFO
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=artgallery
      - DB_USER=postgres
      - DB_PASSWORD=qwerty12345
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://:qwerty12345@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:qwerty12345@redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - static_volume:/app/static
      - media:/app/media
    depends_on:
      - web
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media:

networks:
  app-network:
    driver: bridge
import datetime
import requests
from celery import shared_task
from django.conf import settings
from trade.models import PreOrder


@shared_task
def send_tg_message(name, email, text, ip_address, created_at):
    method = 'sendMessage'
    chat_id = settings.TG_CHAT_ID
    url = settings.TG_API_LINK + settings.TG_TOKEN_ACCESS_KEY + '/' + method
    params = {
        'chat_id': chat_id,
        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º –∏ —Ç–µ–∫—Å—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        'text': f'–î–∞—Ç–∞ {created_at}, IP –∞–¥—Ä–µ—Å {ip_address}, –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º—è - {name}, '
                f'email - {email}, —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: "{text}"'
    }
    requests.get(url, params=params)


@shared_task
def send_tg_order_notification(order_number, total_amount, client_ip, name, email, phone, address, created_at,
                               order_items):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º"""
    method = 'sendMessage'
    chat_id = settings.TG_CHAT_ID
    url = settings.TG_API_LINK + settings.TG_TOKEN_ACCESS_KEY + '/' + method

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ
    message = f"üé® *–ù–û–í–´–ô –ó–ê–ö–ê–ó –ù–ê –°–ê–ô–¢–ï!*\n\n"
    message += f"üì¶ *–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:* #{order_number}\n"
    message += f"üí∞ *–û–±—â–∞—è —Å—É–º–º–∞:* {total_amount} —Ä—É–±.\n"
    message += f"üìÖ *–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:* {created_at}\n"
    message += f"üåê *IP –∞–¥—Ä–µ—Å:* {client_ip}\n\n"

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–∫–∞–∑–∞
    message += f"üõí *–î–ï–¢–ê–õ–ò –ó–ê–ö–ê–ó–ê:*\n"
    message += "‚îå" + "‚îÄ" * 35 + "‚îê\n"

    total_items = 0
    for i, item in enumerate(order_items, 1):
        item_total = item['quantity'] * item['price']
        message += f"‚îÇ {i:2d}. {item['name'][:25]:<25} ‚îÇ\n"
        message += f"‚îÇ     –ö–æ–ª-–≤–æ: {item['quantity']:2d} —à—Ç. √ó {item['price']:6.2f} —Ä—É–±. ‚îÇ\n"
        message += f"‚îÇ     –ò—Ç–æ–≥–æ:  {item_total:8.2f} —Ä—É–±. ‚îÇ\n"
        if i < len(order_items):
            message += "‚îú" + "‚îÄ" * 35 + "‚î§\n"
        total_items += item['quantity']

    message += "‚îî" + "‚îÄ" * 35 + "‚îò\n"
    message += f"‚îÇ *–ò—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤:* {total_items} —à—Ç. ‚îÇ\n"
    message += f"‚îÇ *–û–±—â–∞—è —Å—É–º–º–∞:* {total_amount:8.2f} —Ä—É–±. ‚îÇ\n"
    message += "‚îî" + "‚îÄ" * 35 + "‚îò\n\n"

    message += f"üë§ *–î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê:*\n"
    message += f"‚Ä¢ *–§–ò–û:* {name}\n"
    message += f"‚Ä¢ *Email:* {email}\n"
    message += f"‚Ä¢ *–¢–µ–ª–µ—Ñ–æ–Ω:* {phone}\n"
    message += f"‚Ä¢ *–ê–¥—Ä–µ—Å:* {address}\n\n"
    message += f"‚úÖ *–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!*"

    params = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'Markdown'
    }

    try:
        response = requests.get(url, params=params, timeout=10)
        response.raise_for_status()
        return True
    except requests.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

@shared_task
def delete_preorder_items():
    """–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏—Ö –∫–æ—Ä–∑–∏–Ω—ã —Å—Ç–∞—Ä—ã—Ö –ø–æ–º–µ—á–µ–Ω–Ω—ã—Ö –∫ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–æ–≤.
    –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –∑–∞–ª–µ–∂–∞–ª—Å—è –±–æ–ª–µ–µ 1 —á–∞—Å–∞, —Ç–æ —É–¥–∞–ª—è–µ–º –µ–≥–æ –¥–ª—è –≤—Å–µ—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Ä–∞–∑ –≤ —á–∞—Å."""
    systime = datetime.datetime.now()
    old_preorders = PreOrder.objects.filter(updated_at__lt=systime - datetime.timedelta(days=1))
    quantity = len(old_preorders)
    old_preorders.delete()
    print(f'–£–¥–∞–ª–µ–Ω–æ {quantity} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã')
    return None